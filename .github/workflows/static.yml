# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Download Files and Get Paths
        run: |
          # Array to store GIF URLs
          gif_urls=()

          # Get the list of GIF files in the img directory
          files=$(curl -sSL -H "Authorization: token ${{ secrets.RESOURCE_TOKEN }}" "https://api.github.com/repos/HKEYLOCALMACHINE/img" | jq -r '.[] | select(.type == "file" and .name | endswith(".gif")) | .download_url')

          # Loop to download and store URLs of all GIFs in the img directory
          for file_url in $files; do
            response=$(curl -sSL -H "Authorization: token ${{ secrets.RESOURCE_TOKEN }}" -o $(basename $file_url) -w "%{url_effective}" $file_url)
            gif_urls+=("$response")
            done

          # Output the array as a JSON string
          echo "::set-output name=gif_urls::$(echo ${gif_urls[@]} | jq -R -s 'split(" ")')"
          id: download-files
  

